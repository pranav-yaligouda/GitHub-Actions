name: Test Build and Push to DockerHub CI/CD

# Trigger on push and pull request events to main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: pranavyaligouda/express-app

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
    # Checkout repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Build Docker image for testing
    - name: Build Docker image
      run: |
        echo "Building Docker image"
        docker build -t ${{env.IMAGE_NAME}}:test .
        echo "Docker image built successfully"

    #Test the built image
    - name: Test Docker container
      run: |
        echo "Running tests on Docker container"
        docker run -d -p 8080:8080 -e PORT=8080 --name test-app ${{env.IMAGE_NAME}}:test
        echo "waiting for application startup..."
        sleep 15

        echo "Health check..."
        if curl -f http://localhost:8080 --max-time 10; then
          echo "Health check passed"
        else
          echo "Health check failed"
          docker logs test-app
          exit 1
        fi

        echo "Stopping and removing test container"
        docker stop test-app
        docker rm test-app
        echo "Test container removed"

    # Setup Docker Buildx
    - name: set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Login to DockerHub
    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push Docker image
    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    # Deploy trigger to Render.com
    - name: Deploy to Render
      if: github.event_name != 'pull_request'
      run: |
        echo "Triggering deployment to Render"
        response=$(curl -s -o /dev/null -w "%{http_code}" -X POST ${{ secrets.RENDER_DEPLOY_HOOK }})
        if [ "$response" -eq 200 ]; then
          echo "Deployment triggered successfully"
        else
          echo "Failed to trigger deployment"
          exit 1
        fi

    #clean up test image
    - name: Clean up test image
      run: |
        echo "Removing test image"
        docker rmi ${{ env.IMAGE_NAME }}:test || true
        echo "Test image removed"